/**
 * External dependencies
 */
import React from 'react';
import type { DialogInputEvent } from './types';
declare const _default: import("../ui/context").WordPressComponent<React.ElementType<any>, {
    children: React.ReactNode;
    onConfirm: (event: DialogInputEvent) => void;
} & {
    onCancel: (event: DialogInputEvent) => void;
    isOpen: boolean;
} & Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}, "as" | keyof {
    children: React.ReactNode;
    onConfirm: (event: DialogInputEvent) => void;
} | "onCancel" | "isOpen"> & {
    as?: undefined;
}, boolean> | import("../ui/context").WordPressComponent<React.ElementType<any>, {
    children: React.ReactNode;
    onConfirm: (event: DialogInputEvent) => void;
} & {
    onCancel?: ((event: DialogInputEvent) => void) | undefined;
    isOpen?: undefined;
} & Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "key" | keyof React.HTMLAttributes<HTMLDivElement>> & {
    ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined;
}, "as" | keyof {
    children: React.ReactNode;
    onConfirm: (event: DialogInputEvent) => void;
} | "onCancel" | "isOpen"> & {
    as?: undefined;
}, boolean>;
export default _default;
//# sourceMappingURL=component.d.ts.map